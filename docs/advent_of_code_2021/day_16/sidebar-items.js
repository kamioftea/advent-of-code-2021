initSidebarItems({"enum":[["PacketType","The eight possible packet types"]],"fn":[["parse_input",""],["parse_literal","Parse the section of a literal packet representing the number. This will be in chunks of 5 bits, the first being a flag that indicates if parsing should continue after this chunk, the next four being the next four bits in the number. Once the continue flag is `0` indicating this is the final chunk, all four-bit sections should be concatenated and interpreted as the binary representation of a usize. Returns the value and number of bits consumed."],["parse_packet","Read the packet header (version: 3 bits, type: 3 bits). Then based of the type delegate the parsing of the payload to either [`parse_literal`] or [`parse_sub_packets`]. Return the parsed [`Packet`] and number of bits consumed"],["parse_sub_packets","Parse the sub-packets section of an operation packet."],["run","The entry point for running the solutions with the ‘real’ puzzle input."],["take_bits","Consume the last `count` bits from the end of the provided vector, interpreting them as a binary representation of a usize."],["to_bits","Parse a hexadecimal string as a sequence of bits. The returned list is reversed for ease of consuming the bits via [`Vec::pop`]."]],"struct":[["Packet","Represents a packet in BITS"]]});